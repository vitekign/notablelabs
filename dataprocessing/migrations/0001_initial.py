# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-30 23:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=32)),
                ('bcr', models.CharField(max_length=32)),
                ('day_of_dcc_upload', models.CharField(max_length=32)),
                ('disease_code', models.CharField(max_length=32)),
                ('file_uuid', models.CharField(max_length=32)),
                ('month_of_dcc_upload', models.CharField(max_length=32)),
                ('project_code', models.CharField(max_length=32)),
                ('year_of_dcc_upload', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='CytogeneticAbnormalities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abnormality', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='FishTestComponentResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fish_test_component', models.CharField(default='', max_length=64)),
                ('fish_test_component_percentage_value', models.FloatField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImmunophenotypeCytochemistryTestingResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('immunophenotype_cytochemistry_testing_result', models.CharField(default='', max_length=64)),
                ('immunophenotype_cytochemistry_percent_positive', models.FloatField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MolecularAnalysisAbnormalityTestingResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('molecular_analysis_abnormality_testing_result', models.CharField(default='', max_length=64)),
                ('molecular_analysis_abnormality_testing_percentage_value', models.FloatField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acute_myeloid_leukemia_calgb_cytogenetics_risk_category', models.CharField(default='', max_length=64)),
                ('additional_studies', models.CharField(default='', max_length=64)),
                ('age_at_initial_pathologic_diagnosis', models.FloatField(max_length=128, null=True)),
                ('assessment_timepoint_category', models.CharField(default='', max_length=64)),
                ('atra_exposure', models.CharField(default='', max_length=64)),
                ('bcr_patient_barcode', models.CharField(default='', max_length=64)),
                ('bcr_patient_uuid', models.CharField(default='', max_length=64)),
                ('cumulative_agent_total_dose', models.FloatField(max_length=128, null=True)),
                ('cytogenetic_abnormality_other', models.CharField(default='', max_length=64)),
                ('cytogenetic_analysis_performed_ind', models.CharField(default='', max_length=64)),
                ('day_of_form_completion', models.FloatField(max_length=128, null=True)),
                ('days_to_birth', models.FloatField(max_length=128, null=True)),
                ('days_to_death', models.FloatField(max_length=128, null=True)),
                ('days_to_initial_pathologic_diagnosis', models.FloatField(max_length=128, null=True)),
                ('days_to_last_followup', models.FloatField(max_length=128, null=True)),
                ('days_to_last_known_alive', models.CharField(default='', max_length=64)),
                ('disease_detection_molecular_analysis_method_type', models.CharField(default='', max_length=64)),
                ('disease_detection_molecular_analysis_method_type_other_text', models.CharField(default='', max_length=64)),
                ('drugs', models.CharField(default='', max_length=64)),
                ('eastern_cancer_oncology_group', models.CharField(default='', max_length=64)),
                ('ethnicity', models.CharField(default='', max_length=64)),
                ('fish_evaluation_performed_ind', models.CharField(default='', max_length=64)),
                ('fluorescence_in_situ_hybrid_cytogenetics_metaphase_nucleus_result_count', models.FloatField(max_length=128, null=True)),
                ('fluorescence_in_situ_hybridization_abnormal_result_indicator', models.CharField(default='', max_length=64)),
                ('follow_ups', models.CharField(default='', max_length=64)),
                ('gender', models.CharField(default='', max_length=64)),
                ('germline_testing_performed', models.CharField(default='', max_length=64)),
                ('history_of_neoadjuvant_treatment', models.CharField(default='', max_length=64)),
                ('hydroxyurea_administration_prior_registration_clinical_study_indicator', models.CharField(default='', max_length=64)),
                ('hydroxyurea_agent_administered_day_count', models.FloatField(max_length=128, null=True)),
                ('icd_10', models.CharField(default='', max_length=64)),
                ('icd_o_3_histology', models.CharField(default='', max_length=64)),
                ('icd_o_3_site', models.CharField(default='', max_length=64)),
                ('informed_consent_verified', models.CharField(default='', max_length=64)),
                ('initial_pathologic_diagnosis_method', models.CharField(default='', max_length=64)),
                ('karnofsky_performance_score', models.CharField(default='', max_length=64)),
                ('lab_procedure_abnormal_lymphocyte_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_blast_cell_outcome_percentage_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_band_cell_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_basophil_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_blast_cell_outcome_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_cellularity_outcome_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_diff_not_reported_reason', models.CharField(default='', max_length=64)),
                ('lab_procedure_bone_marrow_lab_eosinophil_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_lymphocyte_outcome_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_metamyelocyte_result_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_myelocyte_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_neutrophil_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_prolymphocyte_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_promonocyte_count_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_bone_marrow_promyelocyte_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_hematocrit_outcome_percent_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_hemoglobin_result_specified_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_leukocyte_result_unspecified_value', models.FloatField(max_length=128, null=True)),
                ('lab_procedure_monocyte_result_percent_value', models.FloatField(max_length=128, null=True)),
                ('leukemia_french_american_british_morphology_code', models.CharField(default='', max_length=64)),
                ('leukemia_specimen_cell_source_type', models.CharField(default='', max_length=64)),
                ('molecular_analysis_abnormal_result_indicator', models.CharField(default='', max_length=64)),
                ('month_of_form_completion', models.FloatField(max_length=128, null=True)),
                ('other_dx', models.CharField(default='', max_length=64)),
                ('patient_id', models.FloatField(max_length=128, null=True)),
                ('performance_status_scale_timing', models.CharField(default='', max_length=64)),
                ('person_history_leukemogenic_agent_other_exposure_text', models.CharField(default='', max_length=64)),
                ('person_history_nonmedical_leukemia_causing_agent_type', models.CharField(default='', max_length=64)),
                ('platelet_result_count', models.FloatField(max_length=128, null=True)),
                ('prior_hematologic_disorder_diagnosis_indicator', models.CharField(default='', max_length=64)),
                ('radiations', models.CharField(default='', max_length=64)),
                ('steroid_therapy_administered', models.CharField(default='', max_length=64)),
                ('tissue_source_site', models.CharField(default='', max_length=64)),
                ('total_dose_units', models.CharField(default='', max_length=64)),
                ('tumor_tissue_site', models.CharField(default='', max_length=64)),
                ('tumor_tissue_site_other', models.CharField(default='', max_length=64)),
                ('vital_status', models.CharField(default='', max_length=64)),
                ('year_of_form_completion', models.FloatField(max_length=128, null=True)),
                ('year_of_initial_pathologic_diagnosis', models.FloatField(max_length=128, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dataprocessing.Admin')),
                ('cytogenetic_abnormalities', models.ManyToManyField(to='dataprocessing.CytogeneticAbnormalities')),
                ('fish_test_component_results', models.ManyToManyField(to='dataprocessing.FishTestComponentResults')),
                ('immunophenotype_cytochemistry_testing_results', models.ManyToManyField(to='dataprocessing.ImmunophenotypeCytochemistryTestingResults')),
                ('molecular_analysis_abnormality_testing_results', models.ManyToManyField(to='dataprocessing.MolecularAnalysisAbnormalityTestingResults')),
            ],
        ),
        migrations.CreateModel(
            name='PatientWithdrawal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('withdrawn', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RaceList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='race_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataprocessing.RaceList'),
        ),
        migrations.AddField(
            model_name='admin',
            name='patient_withdrawal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dataprocessing.PatientWithdrawal'),
        ),
    ]
